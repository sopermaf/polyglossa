"""
Django settings for polyglossa project.

Generated by 'django-admin startproject' using Django 3.0
"""
import os

from dotenv import load_dotenv

# os.environ[] used to ensure KEY_ERROR thrown
# in case of env var not being set

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
FRONTEND_DIR = os.path.join(BASE_DIR, 'frontend')
VUE_DIST_DIR = os.path.join(BASE_DIR, 'frontend', 'dist')

load_dotenv(os.path.join(BASE_DIR, '.env'), override=True)

SECRET_KEY = os.environ['POLYGLOSSA_SECRET_KEY']
DEBUG = os.environ.get('POLYGLOSSA_DEBUG', False) in (True, 'True', 'true')
CSRF_COOKIE_NAME = 'XSRF-TOKEN'

# always 'True' in production
CSRF_COOKIE_SECURE = not DEBUG
SESSION_COOKIE_SECURE = not DEBUG
SECURE_SSL_REDIRECT = not DEBUG


ALLOWED_HOSTS = ['*'] if DEBUG else ['www.polyglossa.com', 'polyglossa.com']


# Application definition

ADMINS = (
    ('Ferdia', 'sopermaf@tcd.ie'),
    ('Conner', 'conner_pe@yahoo.com'),
)

PREREQUSITE_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'webpack_loader',
    'paypal.standard.ipn',
]

PROJECT_APPS = [
    'class_bookings',
    'payments',
    'learning_materials',
    'tasks',
]

INSTALLED_APPS = PREREQUSITE_APPS + PROJECT_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'polyglossa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [VUE_DIST_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'polyglossa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'OPTIONS': {
            'read_default_file': os.path.join(BASE_DIR, 'polyglossa', 'mysql.cnf'),
            'sql_mode': 'STRICT_ALL_TABLES',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(VUE_DIST_DIR, 'css'),
    os.path.join(VUE_DIST_DIR, 'img'),
    os.path.join(VUE_DIST_DIR, 'js'),
    VUE_DIST_DIR,
]

WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': DEBUG,
        'BUNDLE_DIR_NAME': '/bundles/',  # must end with slash
        'STATS_FILE': os.path.join(FRONTEND_DIR, 'webpack-stats.json'),
    }
}


# PAYPAL SETTINGS

PAYPAL_TEST = DEBUG
PAYPAL_EMAIL = os.environ['PAYPAL_EMAIL']
CERT_PATH = [BASE_DIR, 'polyglossa', 'certs']
CERT_APPENDIX = 'sandbox' if PAYPAL_TEST else 'prod'

PAYPAL_PRIVATE_CERT = os.path.join(*CERT_PATH, 'paypal_private_{}.pem'.format(CERT_APPENDIX))
PAYPAL_PUBLIC_CERT = os.path.join(*CERT_PATH, 'paypal_public_{}.pem'.format(CERT_APPENDIX))
PAYPAL_CERT = os.path.join(*CERT_PATH, 'paypal_cert_{}.pem'.format(CERT_APPENDIX))
PAYPAL_CERT_ID = os.environ['PAYPAL_CERT_ID']


# EMAIL

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = DEFAULT_FROM_EMAIL = os.environ['POLYGLOSSA_EMAIL']
EMAIL_HOST_PASSWORD = os.environ['POLYGLOSSA_EMAIL_PASSWORD']
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
if DEBUG:
    EMAIL_BACKEND = EMAIL_BACKEND.replace('smtp', 'console')
